type Forum {
  forum_id: ID!
  creator: ID!
  name: String
  admins: [ID!]
  users: [ID!]
  isPrivilage: Boolean
}

type SimpleForum {
  forum_id: ID!
  name: String
}

type User {
  id: ID!
  name: String
  img: String
}

type Message {
  id: ID!
  text: String
  sender: User
  time: Float
}

type ForumMessage {
  forum: Forum
  messages: [Message]
}

type ReqJoinForum {
  fid: ID
  reqUser: User
  reqInfo: String
}

type Notify {
  state: Int!
  kind: Int!
  message: String!
  time: Float!
  reqJoin: ReqJoinForum
}

type Query {
  myForums(uid: ID!): [Forum]
  forums(uid: ID!): [SimpleForum]
  members(uid: ID!, fid: ID!): [User]
  messages(uid: ID, fid: ID, offset: Int, showCount: Int): [Message]
  userInfo(uid: ID!): User
  myNotifies(uid: ID!): [Notify]
}

input ForumInput {
  name: String
  isPrivilage: Boolean
}

type Mutation {
  createForum(uid: ID!, forum: ForumInput): Forum
  joinForum(uid: ID!, fid: ID!): ForumMessage
  postMessage(uid: ID!, fid: ID!, text: String): Message
  processReq(uid: ID!, fid: ID!, rid: ID!, yesOrNo: Boolean): String
}
